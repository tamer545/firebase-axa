{"version":3,"sources":["project/ToDoList.js","project/Login.js","project/Registration.js","project/Main.js","index.js"],"names":["ToDoListe","useState","user","setUser","toDos","setToDos","name","start","ende","newToDo","setNewToDo","message","setMessage","errorMessage","setErrorMessage","showSpinner","setShowSpinner","className","id","InputGroup","FormControl","aria-label","aria-describedby","value","onChange","e","target","Spinner","size","animation","variant","Button","onClick","firebase","database","ref","on","snap","val","console","log","old","type","Date","toISOString","substring","push","set","storeToDo","BetterTable","newArray","scope","length","map","toDo","index","filter","todo","idx","deleteToDo","deleteByIndex","Like","Login","onLogin","placeholder","href","Registration","username","setUsername","password","setPassword","firstPw","setFirstPw","validate","Dropdown","Toggle","Menu","Item","Main","path","component","ToDoList","to","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.c1ac57e9.chunk.js","sourcesContent":["import '../App.css';\r\nimport firebase from 'firebase';\r\nimport React, {useState} from \"react\";\r\nimport {Button, FormControl, InputGroup, Spinner} from \"react-bootstrap\";\r\nimport {Square} from \"react-bootstrap-icons\";\r\n\r\nexport default function ToDoListe() {\r\n    const [user, setUser] = useState()\r\n    let [toDos, setToDos] = useState([])\r\n    const [newToDo, setNewToDo] = useState({name: '', start: '', ende: ''})\r\n    const [message, setMessage] = useState('')\r\n    const [errorMessage, setErrorMessage] = useState('')\r\n    const [showSpinner, setShowSpinner] = useState(false)\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <h4>Login</h4>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className=\"form-group w-25\">\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                        value={user}\r\n                        onChange={e => setUser(e.target.value)}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n            <br/>\r\n            {showSpinner && <Spinner size={\"sm\"} animation=\"border\" variant=\"light\"/>}\r\n\r\n            <br/>\r\n            <Button onClick={loginButtonPressed}>Login</Button>\r\n            <br/>\r\n            <br/>\r\n            <br/>\r\n            <h5>\r\n                {message}\r\n                <br/>\r\n                <br/>\r\n                {errorMessage}\r\n            </h5>\r\n            -----------------------------------------------------------------------------------------------------\r\n            <br/>\r\n            <br/>\r\n\r\n            <h2>To Do's</h2>\r\n\r\n            <h5>Neues To Do:</h5>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className=\"form-group w-25\">\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        aria-describedby=\"inputGroup-sizing-default\"\r\n                        value={newToDo.name}\r\n                        onChange={e => setNewToDo(old => ({...old, name: e.target.value}))}\r\n                    />\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/><br/>\r\n            <h5>Fällig am:</h5>\r\n            <input id={\"toDoDate\"} type={\"date\"} value={newToDo.ende}\r\n                   onChange={e => setNewToDo(old => ({...old, ende: e.target.value}))}/>\r\n\r\n            <br/>\r\n            <br/>\r\n            <Button onClick={buttonPressed}>Speichern</Button>\r\n            <br/>\r\n            <BetterTable/>\r\n            <br/>\r\n            <Button onClick={deleteAll}>Alle löschen</Button>\r\n        </div>\r\n    );\r\n\r\n    function BetterTable() {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th scope=\"col\">#</th>\r\n                    <th scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Hinzugefügt am</th>\r\n                    <th scope=\"col\">Fällig am</th>\r\n                    <th scope=\"col\">Fertig?</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {toDos.length === 0 ? <div></div> : toDos.map((toDo, index) =>\r\n                    <tr key={index}>\r\n                        <th scope=\"row\">{index}</th>\r\n                        <td>{toDo.name}</td>\r\n                        <td>{toDo.start}</td>\r\n                        <td>{toDo.ende}</td>\r\n                        <td>\r\n                            <div onClick={() => deleteByIndex(index)}>\r\n                                <Like/>\r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                )}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n    function Like() {\r\n        return (<Square/>)\r\n    }\r\n\r\n    function deleteByIndex(index) {\r\n        deleteToDo(index)\r\n    }\r\n\r\n\r\n    function buttonPressed() {\r\n        newToDo.start = getCurrentDate()\r\n        toDos.push(newToDo)\r\n        storeToDo(user)\r\n    }\r\n\r\n    function getCurrentDate() {\r\n        return new Date().toISOString().substring(0, 10)\r\n    }\r\n\r\n    function storeToDo(user) {\r\n        if (user != null) {\r\n            firebase.database().ref('users/' + user + '/toDo').set(toDos);\r\n        }\r\n    }\r\n\r\n    function loginButtonPressed() {\r\n        let newArray = []\r\n        setToDos(newArray)\r\n        setShowSpinner(true)\r\n        readToDos()\r\n    }\r\n\r\n    function readToDos() {\r\n        // on() method\r\n        firebase.database().ref('users/' + user + '/toDo').on('value', (snap) => {\r\n            if (snap.val()) {\r\n                console.log(\"snap.val()\", snap.val())\r\n                setToDos(snap.val())\r\n                setMessage(\"User erfolgreich angemeldet\")\r\n                setErrorMessage(\"\")\r\n            } else {\r\n                setMessage(\"-User erfolgreich angemeldet\")\r\n                setErrorMessage(\"-User hat noch keine Einträge\")\r\n            }\r\n            setShowSpinner(false)\r\n        });\r\n    }\r\n\r\n    function deleteToDo(index) {\r\n        let newArray = toDos.filter((todo, idx) => idx !== index);\r\n        setToDos(newArray);\r\n\r\n        if (user != null) {\r\n            firebase.database().ref('users/' + user + '/toDo').set(newArray);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function deleteAll() {\r\n        let newArray = []\r\n        setToDos(newArray)\r\n\r\n        if (user != null) {\r\n            firebase.database().ref('users/' + user + '/toDo').set(newArray);\r\n        }\r\n    }\r\n}","import {FormControl, InputGroup, Button} from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport ToDoListe from \"./ToDoList\";\r\nimport '../App.css';\r\n\r\nexport default function Login() {\r\n\r\n    function onLogin(){\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>ToDo List</h1><br/>\r\n            <h2>Login</h2>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}><FormControl aria-label=\"Default\"\r\n                                                                       placeholder=\"Username\"></FormControl></InputGroup>\r\n            </div>\r\n            <br/>\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}><FormControl aria-label=\"Default\" type=\"password\"\r\n                                                                       placeholder=\"Password\"></FormControl></InputGroup>\r\n            </div>\r\n            <br/>\r\n            <Button onClick={()=> onLogin}> <a href=\"/todolist\">Login</a></Button>\r\n            <br/>\r\n            <h6>Don't have an account yet? <a href=\"/registration\">Register</a></h6>\r\n        </div>\r\n    );\r\n}","import {FormControl, InputGroup, Button, DropdownButton, Dropdown} from \"react-bootstrap\";\r\nimport React, {useState} from \"react\";\r\nimport '../App.css';\r\nimport firebase from \"firebase\";\r\n\r\n\r\nexport default function Registration() {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [firstPw, setFirstPw] = useState('')\r\n\r\n    function storeUser() {\r\n        firebase.database().ref('usernames/' + username + '/security/password').set(password)\r\n    }\r\n\r\n    function validate() {\r\n        console.log(username)\r\n        if (username != null && firstPw === password) {\r\n            storeUser()\r\n            console.log(username)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Semeru</h1><br/>\r\n            <h2>Registration</h2>\r\n            <br/>\r\n\r\n            <Dropdown>\r\n                <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\r\n                    Form of Address\r\n                </Dropdown.Toggle>\r\n                <Dropdown.Menu>\r\n                    <Dropdown.Item href=\"#/action-1\">Mr.</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-2\">Ms.</Dropdown.Item>\r\n                    <Dropdown.Item href=\"#/action-3\">Mrs.</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\"\r\n                        placeholder=\"Username\"\r\n                        value={username}\r\n                        onChange={e => setUsername(e.target.value)}>\r\n\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\" type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={firstPw}\r\n                        onChange={e => setFirstPw(e.target.value)}\r\n                    >\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n\r\n            <div className={\"d-flex\"} id={\"inputDiv\"}>\r\n                <InputGroup className={\"form-group w-25\"}>\r\n                    <FormControl\r\n                        aria-label=\"Default\" type=\"password\"\r\n                        placeholder=\"Confirm Password\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}>\r\n                    </FormControl>\r\n                </InputGroup>\r\n            </div>\r\n\r\n            <br/>\r\n            <Button onClick={() => validate()}>Register</Button>\r\n            <h6>Already have an account? <a href=\"/login\">Sign in</a></h6>\r\n\r\n        </div>\r\n    );\r\n}","import '../App.css';\r\nimport React from \"react\";\r\nimport {Switch, Route, Redirect} from \"react-router-dom\";\r\nimport Login from './Login.js'\r\nimport Registration from './Registration.js'\r\nimport ToDoList from \"./ToDoList\";\r\n\r\n\r\nexport default function Main() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path=\"/login\" component={Login}/>\r\n                <Route path=\"/registration\" component={Registration}/>\r\n                <Route path=\"/todolist\" component={ToDoList}/>\r\n                <Route path=\"/\">\r\n                    <Redirect to=\"/login\"/>\r\n                </Route>\r\n\r\n            </Switch>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport firebase from \"firebase\";\r\nimport Main from \"./project/Main\";\r\nimport {HashRouter} from 'react-router-dom';\r\n\r\n//InitializeFirebase\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAKPxlXlJRVD7DwGaZ5htNGWSmlPRoR2Ls\",\r\n    authDomain: \"todoliste-5382e.firebaseapp.com\",\r\n    databaseURL: \"https://todoliste-5382e-default-rtdb.firebaseio.com\",\r\n    projectId: \"todoliste-5382e\",\r\n    storageBucket: \"todoliste-5382e.appspot.com\",\r\n    messagingSenderId: \"971203866724\",\r\n    appId: \"1:971203866724:web:f8d72416786622d473ef71\",\r\n    measurementId: \"G-VGLJMJM2H0\"\r\n};\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter basename=\"/#\"><Main /></HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}